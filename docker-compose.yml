# docker-compose build && docker-compose up -d
# If "docker-compose logs ckan" shows DB not ready, run "docker-compose restart ckan" a few times.
version: "3"

volumes:
  ckan_storage:
  pg_data:
  solr_data:

services:
  nginx:
    container_name: nginx
    build:
      context: nginx/
      dockerfile: Dockerfile
    links:
      - ckan
    ports:
      - "0.0.0.0:80:80"
    
  ckan:
    container_name: ckan
    build:
      context: ckan/
      dockerfile: Dockerfile
      args:
        - TZ=${TZ}
    env_file:
      - .env
    depends_on:
      - "db"
    links:
      - db
      - solr
      - redis
      - datapusher
    ports:
      - "0.0.0.0:${CKAN_PORT}:5000"
    volumes:
      - ckan_storage:/var/lib/ckan

  datapusher:
    container_name: datapusher
    image: clementmouchet/datapusher
    ports:
      - "8800:8800"

  db:
    container_name: db
    build:
      context: postgresql/
      args:
        - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    environment:
      - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/db
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "ckan"]

  solr:
    container_name: solr
    build:
      context: solr/
    volumes:
      - solr_data:/opt/solr/server/solr/ckan/data

  redis:
    container_name: redis
    image: redis:latest
