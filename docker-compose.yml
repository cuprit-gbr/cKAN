# docker-compose build && docker-compose up -d
# If "docker-compose logs ckan" shows DB not ready, run "docker-compose restart ckan" a few times.

version: "3"

services:
  traefik:
    # The official v2 Traefik docker image
    image: traefik:v2.4
    container_name: traefik
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - --api.insecure=false
      - --providers.docker
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.docker.exposedbydefault=false
      - --certificatesresolvers.leresolver.acme.email=toni.schoenbuchner@cuprit.net
      - --certificatesresolvers.leresolver.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.leresolver.acme.tlschallenge=true
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    networks:
      - http
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
    labels:
      - "traefik.enable=true"

      # global redirect to https
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"

      # middleware redirect
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

  nginx:
    container_name: nginx
    build:
      context: nginx/
      dockerfile: Dockerfile
    links:
      - ckan
    networks:
      - http
    depends_on:
      - "ckan"
    restart: on-failure
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`ckan-dev.cuprit.net`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=leresolver"

  ckan:
    container_name: ckan
    build:
      context: ckan/
      dockerfile: Dockerfile
      args:
        - TZ=${TZ}
    env_file:
      - .env
    networks:
      - http
      - local
    depends_on:
      - "db"
      - "solr"
      - "redis"
    links:
      - db
      - solr
      - redis
      - datapusher
    ports:
      - "0.0.0.0:${CKAN_PORT}:5000"
    volumes:
      - ckan_storage:/var/lib/ckan
      - api_share:/usr/share/api_share
    labels:
      - traefik.enable=false

  ckan_service:
    container_name: ckan_service
    build:
      context: ckan_service/
      dockerfile: Dockerfile
      args:
        - TZ=${TZ}
    env_file:
      - .env
    networks:
      - http
      - local
    labels:
      - traefik.enable=false
    volumes:
      - api_share:/usr/share/api_share

  datapusher:
    container_name: datapusher
    image: keitaro/ckan-datapusher:0.0.17
    networks:
      - local
    ports:
      - "8000:8000"
    labels:
      - traefik.enable=false
    environment:
      - DATAPUSHER_VERSION=0.0.17
      - DATAPUSHER_MAX_CONTENT_LENGTH=10485760
      - DATAPUSHER_CHUNK_SIZE=16384
      - DATAPUSHER_CHUNK_INSERT_ROWS=250
      - DATAPUSHER_DOWNLOAD_TIMEOUT=30
      - DATAPUSHER_SSL_VERIFY=False
      - DATAPUSHER_REWRITE_RESOURCES=True
      - DATAPUSHER_REWRITE_URL=http://ckan:5000

  db:
    container_name: db
    build:
      context: postgresql/
      args:
        - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    environment:
      - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/db
    volumes:
      - pg_data:/var/lib/postgresql/data
    labels:
      - traefik.enable=false
    networks:
      - local
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "ckan"]
    ports:
      - "127.0.0.1:5432:5432"

  solr:
    container_name: solr
    build:
      context: solr/
    networks:
      - local
    volumes:
      - solr_data:/opt/solr/server/solr/ckan/data
    labels:
      - traefik.enable=false

  redis:
    container_name: redis
    image: redis:latest
    networks:
      - local
    labels:
      - traefik.enable=false

volumes:
  ckan_storage:
  pg_data:
  solr_data:
  api_share:

networks:
  local:
  http:
